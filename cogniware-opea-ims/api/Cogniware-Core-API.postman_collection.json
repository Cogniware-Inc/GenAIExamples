{
  "info": {
    "name": "Cogniware Core API",
    "description": "Complete API collection for Cogniware Core - High-Performance LLM Acceleration Platform",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "01. Health & Status",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Check if the system is healthy and responsive"
          }
        },
        {
          "name": "System Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/status",
              "host": ["{{base_url}}"],
              "path": ["status"]
            },
            "description": "Get overall system status including loaded models and active requests"
          }
        },
        {
          "name": "System Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/metrics",
              "host": ["{{base_url}}"],
              "path": ["metrics"]
            },
            "description": "Get performance metrics"
          }
        }
      ]
    },
    {
      "name": "02. Authentication",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.environment.set('access_token', jsonData.data.token);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"your_password\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            }
          }
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh"]
            }
          }
        }
      ]
    },
    {
      "name": "03. Model Management",
      "item": [
        {
          "name": "List Models",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/models",
              "host": ["{{base_url}}"],
              "path": ["models"]
            },
            "description": "List all loaded models"
          }
        },
        {
          "name": "Get Model Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/models/llama-7b",
              "host": ["{{base_url}}"],
              "path": ["models", "llama-7b"]
            }
          }
        },
        {
          "name": "Load Model",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"model_id\": \"llama-7b\",\n  \"model_path\": \"/models/llama-7b.bin\",\n  \"device_id\": 0,\n  \"precision\": \"fp16\",\n  \"max_batch_size\": 32\n}"
            },
            "url": {
              "raw": "{{base_url}}/models",
              "host": ["{{base_url}}"],
              "path": ["models"]
            },
            "description": "Load a new model onto specified GPU"
          }
        },
        {
          "name": "Unload Model",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/models/llama-7b",
              "host": ["{{base_url}}"],
              "path": ["models", "llama-7b"]
            }
          }
        },
        {
          "name": "Update Model Config",
          "request": {
            "method": "PUT",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"max_batch_size\": 64,\n  \"precision\": \"fp8\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/models/llama-7b",
              "host": ["{{base_url}}"],
              "path": ["models", "llama-7b"]
            }
          }
        }
      ]
    },
    {
      "name": "04. Inference",
      "item": [
        {
          "name": "Single Inference",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"model_id\": \"llama-7b\",\n  \"prompt\": \"What is artificial intelligence?\",\n  \"max_tokens\": 100,\n  \"temperature\": 0.7,\n  \"top_p\": 0.9\n}"
            },
            "url": {
              "raw": "{{base_url}}/inference",
              "host": ["{{base_url}}"],
              "path": ["inference"]
            },
            "description": "Run single inference request (expected: 8.5ms latency)"
          }
        },
        {
          "name": "Batch Inference",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"model_id\": \"llama-7b\",\n  \"prompts\": [\n    \"What is AI?\",\n    \"Explain machine learning\",\n    \"What are neural networks?\"\n  ],\n  \"max_tokens\": 50\n}"
            },
            "url": {
              "raw": "{{base_url}}/inference/batch",
              "host": ["{{base_url}}"],
              "path": ["inference", "batch"]
            },
            "description": "Process multiple prompts in a single request (expected: 15,000 tok/s)"
          }
        },
        {
          "name": "Async Inference",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"model_id\": \"llama-7b\",\n  \"prompt\": \"Long document to process...\",\n  \"max_tokens\": 500\n}"
            },
            "url": {
              "raw": "{{base_url}}/inference/async",
              "host": ["{{base_url}}"],
              "path": ["inference", "async"]
            },
            "description": "Submit async inference job, returns job_id"
          }
        },
        {
          "name": "Get Inference Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/inference/job_123",
              "host": ["{{base_url}}"],
              "path": ["inference", "job_123"]
            }
          }
        },
        {
          "name": "Stream Inference",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"model_id\": \"llama-7b\",\n  \"prompt\": \"Tell me a story\",\n  \"max_tokens\": 200,\n  \"stream\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/inference/stream",
              "host": ["{{base_url}}"],
              "path": ["inference", "stream"]
            },
            "description": "Stream tokens as they are generated"
          }
        }
      ]
    },
    {
      "name": "05. Multi-LLM Orchestration",
      "item": [
        {
          "name": "Parallel Inference (4 Models)",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"Summarize quantum computing in one sentence\",\n  \"model_ids\": [\"llama-7b\", \"llama-13b\", \"gpt-7b\", \"mistral-7b\"],\n  \"max_tokens\": 50\n}"
            },
            "url": {
              "raw": "{{base_url}}/orchestration/parallel",
              "host": ["{{base_url}}"],
              "path": ["orchestration", "parallel"]
            },
            "description": "Run inference on 4 models in parallel (expected: 60,000 tok/s combined)"
          }
        },
        {
          "name": "Consensus Inference",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"Is this statement true: The Earth is flat?\",\n  \"model_ids\": [\"llama-7b\", \"llama-13b\", \"gpt-7b\", \"mistral-7b\"],\n  \"consensus_threshold\": 0.75\n}"
            },
            "url": {
              "raw": "{{base_url}}/orchestration/consensus",
              "host": ["{{base_url}}"],
              "path": ["orchestration", "consensus"]
            },
            "description": "Get consensus answer from multiple models"
          }
        },
        {
          "name": "Load Balanced Inference",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompts\": [\"prompt1\", \"prompt2\", \"prompt3\", \"prompt4\"],\n  \"model_pool\": [\"llama-7b\", \"llama-13b\", \"gpt-7b\", \"mistral-7b\"],\n  \"strategy\": \"round_robin\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/orchestration/load-balanced",
              "host": ["{{base_url}}"],
              "path": ["orchestration", "load-balanced"]
            }
          }
        }
      ]
    },
    {
      "name": "06. System Monitoring",
      "item": [
        {
          "name": "System Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/system/info",
              "host": ["{{base_url}}"],
              "path": ["system", "info"]
            }
          }
        },
        {
          "name": "CPU Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/system/cpu",
              "host": ["{{base_url}}"],
              "path": ["system", "cpu"]
            }
          }
        },
        {
          "name": "GPU Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/system/gpu",
              "host": ["{{base_url}}"],
              "path": ["system", "gpu"]
            },
            "description": "Get information about all 4 GPUs"
          }
        },
        {
          "name": "Memory Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/system/memory",
              "host": ["{{base_url}}"],
              "path": ["system", "memory"]
            }
          }
        },
        {
          "name": "Resource Usage",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/resources",
              "host": ["{{base_url}}"],
              "path": ["resources"]
            }
          }
        }
      ]
    },
    {
      "name": "07. MCP - Filesystem",
      "item": [
        {
          "name": "Read File",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"read_file\",\n  \"parameters\": {\n    \"path\": \"/path/to/file.txt\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        },
        {
          "name": "Write File",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"write_file\",\n  \"parameters\": {\n    \"path\": \"/path/to/output.txt\",\n    \"content\": \"File content here\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        },
        {
          "name": "List Directory",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"list_directory\",\n  \"parameters\": {\n    \"path\": \"/path/to/directory\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        },
        {
          "name": "Search Files",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"search_files\",\n  \"parameters\": {\n    \"directory\": \"/path/to/search\",\n    \"pattern\": \"*.txt\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        }
      ]
    },
    {
      "name": "08. MCP - Internet",
      "item": [
        {
          "name": "HTTP GET Request",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"http_get\",\n  \"parameters\": {\n    \"url\": \"https://api.example.com/data\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        },
        {
          "name": "HTTP POST Request",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"http_post\",\n  \"parameters\": {\n    \"url\": \"https://api.example.com/submit\",\n    \"body\": \"{\\\"key\\\":\\\"value\\\"}\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        },
        {
          "name": "Scrape Website",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"scrape_website\",\n  \"parameters\": {\n    \"url\": \"https://example.com\",\n    \"selector\": \".content\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        }
      ]
    },
    {
      "name": "09. MCP - Database",
      "item": [
        {
          "name": "Connect to Database",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"db_connect\",\n  \"parameters\": {\n    \"host\": \"localhost\",\n    \"database\": \"mydb\",\n    \"username\": \"user\",\n    \"password\": \"pass\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        },
        {
          "name": "Execute SQL Query",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"db_query\",\n  \"parameters\": {\n    \"connection_id\": \"conn_1\",\n    \"query\": \"SELECT * FROM users LIMIT 10\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        },
        {
          "name": "Select Data",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"db_select\",\n  \"parameters\": {\n    \"connection_id\": \"conn_1\",\n    \"table\": \"users\",\n    \"where\": \"age > 18\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        }
      ]
    },
    {
      "name": "10. MCP - Applications",
      "item": [
        {
          "name": "Launch Process",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"launch_process\",\n  \"parameters\": {\n    \"executable\": \"/usr/bin/firefox\",\n    \"arguments\": \"https://example.com\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        },
        {
          "name": "Execute Command",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"execute_command\",\n  \"parameters\": {\n    \"command\": \"ls -la /home\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        },
        {
          "name": "List Processes",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"list_processes\",\n  \"parameters\": {}\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        },
        {
          "name": "Kill Process",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"kill_process\",\n  \"parameters\": {\n    \"pid\": \"1234\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        }
      ]
    },
    {
      "name": "11. MCP - System Services",
      "item": [
        {
          "name": "Get System Metrics",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"get_system_metrics\",\n  \"parameters\": {}\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        },
        {
          "name": "Log Message",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"log_message\",\n  \"parameters\": {\n    \"level\": \"INFO\",\n    \"component\": \"api\",\n    \"message\": \"Test log message\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        },
        {
          "name": "Query Logs",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"query_logs\",\n  \"parameters\": {\n    \"component\": \"inference\",\n    \"limit\": \"100\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        }
      ]
    },
    {
      "name": "12. MCP - Security",
      "item": [
        {
          "name": "Authenticate User",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"authenticate\",\n  \"parameters\": {\n    \"username\": \"testuser\",\n    \"password\": \"testpass\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        },
        {
          "name": "Check Permission",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"check_permission\",\n  \"parameters\": {\n    \"user_id\": \"user_123\",\n    \"permission\": \"READ\",\n    \"resource_type\": \"FILE\",\n    \"resource_id\": \"/data/file.txt\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"create_user\",\n  \"parameters\": {\n    \"username\": \"newuser\",\n    \"email\": \"user@example.com\",\n    \"password\": \"securepass123\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        }
      ]
    },
    {
      "name": "13. MCP - Resources",
      "item": [
        {
          "name": "Get Memory Info",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"get_memory_info\",\n  \"parameters\": {}\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        },
        {
          "name": "Get CPU Info",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"get_cpu_info\",\n  \"parameters\": {}\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        },
        {
          "name": "Get GPU Info",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"get_gpu_info\",\n  \"parameters\": {}\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        },
        {
          "name": "Allocate Resource",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tool\": \"allocate_resource\",\n  \"parameters\": {\n    \"type\": \"MEMORY\",\n    \"amount\": \"1073741824\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/mcp/tools/execute",
              "host": ["{{base_url}}"],
              "path": ["mcp", "tools", "execute"]
            }
          }
        }
      ]
    },
    {
      "name": "14. Performance & Benchmarks",
      "item": [
        {
          "name": "Run Benchmark Suite",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"suite_name\": \"validation\",\n  \"iterations\": 100\n}"
            },
            "url": {
              "raw": "{{base_url}}/benchmark/run",
              "host": ["{{base_url}}"],
              "path": ["benchmark", "run"]
            },
            "description": "Run performance validation suite to verify 15x improvement"
          }
        },
        {
          "name": "Get Benchmark Results",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/benchmark/results",
              "host": ["{{base_url}}"],
              "path": ["benchmark", "results"]
            }
          }
        },
        {
          "name": "Validate 15x Improvement",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/benchmark/validate-15x",
              "host": ["{{base_url}}"],
              "path": ["benchmark", "validate-15x"]
            },
            "description": "Verify that average speedup meets or exceeds 15x target"
          }
        }
      ]
    },
    {
      "name": "15. Advanced Features",
      "item": [
        {
          "name": "Create Virtual GPU",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"physical_gpu_id\": 0,\n  \"memory_limit_mb\": 40000,\n  \"compute_limit_percent\": 50\n}"
            },
            "url": {
              "raw": "{{base_url}}/gpu/virtualization/create",
              "host": ["{{base_url}}"],
              "path": ["gpu", "virtualization", "create"]
            }
          }
        },
        {
          "name": "Optimize Model (Quantization)",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"model_id\": \"llama-7b\",\n  \"optimization_type\": \"quantization\",\n  \"bits\": 8\n}"
            },
            "url": {
              "raw": "{{base_url}}/optimization/quantize",
              "host": ["{{base_url}}"],
              "path": ["optimization", "quantize"]
            }
          }
        },
        {
          "name": "Submit Training Job",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"model_id\": \"llama-7b\",\n  \"dataset_path\": \"/data/training.jsonl\",\n  \"epochs\": 3,\n  \"batch_size\": 32,\n  \"learning_rate\": 0.0001,\n  \"gpu_ids\": [0, 1, 2, 3]\n}"
            },
            "url": {
              "raw": "{{base_url}}/training/start",
              "host": ["{{base_url}}"],
              "path": ["training", "start"]
            }
          }
        },
        {
          "name": "Register Distributed Worker",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"node_id\": \"worker-1\",\n  \"hostname\": \"192.168.1.100\",\n  \"port\": 8081,\n  \"gpu_ids\": [0, 1, 2, 3]\n}"
            },
            "url": {
              "raw": "{{base_url}}/distributed/register-worker",
              "host": ["{{base_url}}"],
              "path": ["distributed", "register-worker"]
            }
          }
        }
      ]
    }
  ]
}

