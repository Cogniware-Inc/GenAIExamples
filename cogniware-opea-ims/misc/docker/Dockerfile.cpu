FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV BUILD_TYPE=Release

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    python3 \
    python3-pip \
    python3-dev \
    libboost-all-dev \
    libssl-dev \
    libcurl4-openssl-dev \
    libjsoncpp-dev \
    libspdlog-dev \
    libgtest-dev \
    uuid-dev \
    pkg-config \
    python3-numpy \
    python3-pybind11 \
    libomp-dev \
    zlib1g-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Python packages (CPU-only PyTorch)
RUN pip3 install --no-cache-dir \
    torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu && \
    # Verify PyTorch installation
    python3 -c "import torch; print('PyTorch version:', torch.__version__); print('CUDA available:', torch.cuda.is_available())"

# Build and install GTest
RUN cd /usr/src/gtest && \
    cmake CMakeLists.txt && \
    make && \
    cp lib/libgtest*.a /usr/lib/

# Build and install pybind11
RUN git clone https://github.com/pybind/pybind11.git && \
    cd pybind11 && \
    mkdir build && \
    cd build && \
    cmake -DPYBIND11_TEST=OFF -DPYBIND11_INSTALL=ON .. && \
    make -j$(nproc) && \
    make install && \
    cd ../.. && \
    rm -rf pybind11

# Build and install prometheus-cpp
RUN git clone https://github.com/jupp0r/prometheus-cpp.git && \
    cd prometheus-cpp && \
    git submodule init && \
    git submodule update && \
    mkdir build && \
    cd build && \
    cmake .. -DBUILD_SHARED_LIBS=ON && \
    make -j$(nproc) && \
    make install && \
    ldconfig && \
    cd ../.. && \
    rm -rf prometheus-cpp

WORKDIR /app

# Create cmake directory and copy CMake modules
RUN mkdir -p cmake
COPY cmake/FindNumPy.cmake cmake/
COPY cmake/FindTorch.cmake cmake/

# Copy source code
COPY . .

# Build the project with CPU-only configuration
RUN set -e && \
    mkdir -p build && \
    cd build && \
    cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
          -DPYTHON_EXECUTABLE=$(which python3) \
          -DPYTHON_INCLUDE_DIR=$(python3 -c "import sysconfig; print(sysconfig.get_path('include'))") \
          -DPYTHON_LIBRARY=$(python3 -c "import sysconfig; print(sysconfig.get_config_var('LIBDIR'))") \
          -DTorch_DIR=$(python3 -c "import torch; print(torch.utils.cmake_prefix_path)") \
          -DUSE_CUDA=OFF \
          -DCMAKE_VERBOSE_MAKEFILE=ON \
          .. && \
    echo "CMake configuration completed successfully" && \
    make -j$(nproc) VERBOSE=1 && \
    # Verify the build
    if [ ! -f "bin/msmartcompute_engine" ]; then \
        echo "Error: Build failed - executable not found" && exit 1; \
    fi

# Expose port
EXPOSE 8002

# Create non-root user
RUN useradd -m -u 1000 appuser && \
    chown -R appuser:appuser /app
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8002/health || exit 1

# Default command
CMD ["./build/bin/msmartcompute_engine"]

